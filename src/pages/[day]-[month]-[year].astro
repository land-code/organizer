---
import Event from '@/components/Event.astro';
import Layout from '@/layouts/Layout.astro';
import { supabase } from '@/db/client';
import { DateSchema } from '@/schemas/DateSchema';

const { day: rawDay, month: rawMonth, year: rawYear } = Astro.params;

const parsedData = DateSchema.safeParse({
  day: Number(rawDay),
  month: Number(rawMonth),
  year: Number(rawYear),
});
if (!parsedData.success) {
  console.log(parsedData.error.errors);
  throw new Error('Invalid parameters');
}

const { data } = parsedData;

const date = new Date(data.year, data.month - 1, data.day);
if (date.toString() === 'Invalid Date') {
  throw new Error('Invalid date');
}

const day = date.getDate();
const month = date.getMonth() + 1;
const year = date.getFullYear();

const { data: eventsData } = await supabase
  .from('events')
  .select('title, description, event_date');

const filteredEvents = eventsData?.filter(
  ({ event_date }) => new Date(event_date).toDateString() === date.toDateString()
);
---

<Layout
  title={`Date ${date.toDateString()}`}
  description={`Shows info about the date ${date.toDateString()}.`}
>
  <div transition:name={`day-${day}-${month}-${year}`}>
    <h1>{date.toDateString()}</h1>
    <ul class="flex flex-col gap-4 py-4">
      {
        filteredEvents?.map(({ title, description }) => (
          <Event title={title} description={description} />
        ))
      }
    </ul>
  </div>
</Layout>
